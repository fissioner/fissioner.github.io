{"version":3,"sources":["api.js","components/Messenger.js","App.js","serviceWorker.js","index.js"],"names":["socket","io","connect","jumpSound","Audio","shootSound","killSound","startSound","deadSound","music","bg","Image","pf","src","loop","userName","joinedGame","toggle","playSound","sound","currentTime","play","soloGame","emit","score","on","ctx","clearRect","c","width","height","textAlign","fillStyle","font","fillText","concat","document","getElementById","getContext","controls","left","right","up","sounds","jump","shoot","active","e","isActive","type","keyCode","drawElements","els","forEach","el","s","drawImage","x","emoji","y","name","color","fillRect","_","pause","window","addEventListener","Messenger","_this","this","today","Date","toUTCString","react_default","a","createElement","props","user","onSubmit","msg","preventDefault","submitMessage","stamp","id","className","onChange","updateMsg","value","placeholder","onClick","submitMsg","msgs","map","m","Component","App","users","isStart","scores","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","target","setTimeout","state","userID","data","stopGame","JSON","parse","_this$state","online","filter","u","length","key","user_id","Messenger_Messenger","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8906541.chunk.js","sourcesContent":["import io from 'socket.io-client';\n\nconst  socket = io.connect('https://runner-gunner-server.herokuapp.com'),\njumpSound = new Audio('jump.mp3'),\nshootSound = new Audio('laser1.mp3'),\nkillSound = new Audio('kill.mp3'),\nstartSound = new Audio('start.mp3'),\ndeadSound = new Audio('dead.mp3'),\nmusic = new Audio('music.mp3'),\nbg = new Image(),\npf = new Image();\nbg.src = 'bg.png';\npf.src = 'pf.jpg';\nmusic.loop = true;\n\nlet userName,\n    joinedGame = false,\n    toggle = true;\n\nfunction playSound(sound) {\n    sound.currentTime = 0.0;\n        sound.play();\n}\nfunction stopSound(sound) {\n    sound.pause();\n}\nfunction broadcastUser(user) {\nsocket.on('user', data => {\n    user(data);\n    userName = data;\n});\n}\nfunction broadcastUsers(users) {\n    socket.on('users', data => users(data))\n}\nfunction submitMessage(e, msg) {\n    e.preventDefault();\n    socket.emit('submitMsg', msg);\n}\nfunction broadcastMessages(msgs) {\n    socket.on('msg', data => msgs(data));\n}\nfunction broadcastScores(scores) {\n    socket.on('showScores', data => scores(data));\n}\nfunction soloGame() {\n    socket.emit('soloGame', userName);\n    score = 0;\n    playSound(startSound);\n    playSound(music);\n}\nfunction joinGame() {\n    socket.emit('join', userName);\n    playSound(startSound);\n    playSound(music);\n}\nsocket.on('joinedGame', function() {\n    joinedGame = true;\n});\nsocket.on('waiting', function(userName) {\n    ctx.clearRect(0, 0, c.width, c.height);\n    ctx.textAlign = 'center';\n    ctx.fillStyle = 'blue';\n    ctx.font = \"30px Courier\";\n    ctx.fillText(`Waiting for another player to join...`,c.width/2 ,100);\n    ctx.font = \"25px Arial\";\n    ctx.fillStyle = 'magenta';\n    ctx.fillText(`Lobby: ${userName}`,c.width/2 ,170);\n    ctx.fillStyle = 'black';\nctx.font = \"40px Courier\";\nctx.fillText(`Controls`,c.width/2 ,250);\nctx.font = \"20px Arial\";\nctx.fillText(`Space: shoot`,c.width/2 ,300);\nctx.fillText(`Hold Up Arrow: jump`,c.width/2 ,330);\nctx.fillText(`Right Arrow: move right`,c.width/2 ,360);\nctx.fillText(`Left Arrow: move left`,c.width/2 ,390);\n})\nfunction startGame(isStart) {\n    socket.on('startGame', data => isStart(data));\n}\nfunction stopGame(isStart) {\n    socket.on('stopGame', data => isStart(data))\n}\n\nlet c = document.getElementById(\"canvas\"),\nctx = c.getContext(\"2d\");\nctx.textAlign = 'center';\nctx.fillStyle = 'brown';\nctx.font = \"50px Courier\";\nctx.fillText(`Runner Gunner`,c.width/2 ,100);\nctx.textAlign = 'center';\nctx.fillStyle = 'black';\nctx.font = \"40px Courier\";\nctx.fillText(`Controls`,c.width/2 ,250);\nctx.font = \"20px Arial\";\nctx.fillText(`Space: shoot`,c.width/2 ,300);\nctx.fillText(`Hold Up Arrow: jump`,c.width/2 ,330);\nctx.fillText(`Right Arrow: move right`,c.width/2 ,360);\nctx.fillText(`Left Arrow: move left`,c.width/2 ,390);\n\nlet score = 0,\n    controls = {\n    left: false,\n    right: false,\n    up: false,\n    sounds: {\n        jump: false,\n        shoot: false\n    },\n    active: function(e) {\n        let isActive = e.type === 'keydown' ? true : false;\n        switch(e.keyCode) {\n            case 37: controls.left = isActive;\n            break;\n            case 39: controls.right = isActive;\n            break;\n            case 38: controls.up = isActive;\n            if (toggle) {\n                controls.sounds.jump = true;\n                toggle = false;\n            }\n            break;\n            default:\n        }\n        if (e.type === 'keydown' && e.keyCode === 32) {\n            socket.emit('bullets', userName);\n            controls.sounds.shoot = true;\n        }\n        if (e.type === 'keyup' && e.keyCode === 38) {\n            toggle = true;\n        }\n        if (joinedGame) {\n        socket.emit('controls', {controls: controls, userName: userName});\n        }\n        controls.sounds.jump = false;\n        controls.sounds.shoot = false;\n    }\n};\n\nfunction drawSquare(s) {\n    ctx.fillStyle = s.color;\n    ctx.fillRect(s.x,s.y,s.width,s.height);\n}\nfunction drawElements(els) {\n        els.forEach(type => {\n        type.forEach(el => {\n            if (el.type === 'bg') {\n                ctx.drawImage(bg, el.x, 0, c.width, c.height);\n            }\n            else if (el.type === 'player') {\n                if (el.controls.sounds.shoot) playSound(shootSound);\n                if (el.controls.sounds.jump) playSound(jumpSound);\n                ctx.font = \"35px Arial\";\n                ctx.fillText(el.emoji,el.x ,el.y + 35);\n                ctx.font = '12px Arial';\n                ctx.fillStyle = '#ff007f'\n                ctx.textAlign = 'center';\n                ctx.fillText(el.name, el.x + 20, el.y - 20);\n            }\n            else if (el.type === 'enemy') {\n                ctx.font = \"40px Arial\";\n                ctx.fillText(`👹`,el.x ,el.y + 40);\n            }\n            else if (el.type === 'platform') {\n                ctx.drawImage(pf, el.x, el.y, el.width, el.height);\n            }\n            else {\n                drawSquare(el);\n            }\n        })\n    })\n}\n\nsocket.on('drawElements', els => {\n    ctx.clearRect(0, 0, c.width, c.height);\n    drawElements(els);\n    ctx.font = \"30px Arial\";\n    ctx.textAlign = 'left';\n    ctx.fillText(`Score: ${score}`,10 ,50);\n});\nsocket.on('score', s => {\n playSound(killSound);\n score = s;\n})\nsocket.on('gameOver', _ => {\n    playSound(deadSound);\n    stopSound(music);\n    ctx.font = '90px Arial';\n    ctx.fillStyle = 'red';\n    ctx.fillText(`☠️`, c.width/2 -45, c.height/2 - 20);\n    joinedGame = false;\n});\n\n\nwindow.addEventListener('keydown', controls.active);\nwindow.addEventListener('keyup', controls.active);\n\nexport { broadcastUser, broadcastUsers, submitMessage, broadcastMessages, joinGame, startGame, stopGame, broadcastScores, soloGame };","import React, { Component } from 'react';\nimport { submitMessage } from '../api';\n\nexport default class Messenger extends Component {\n    render() {\n        let today = new Date().toUTCString()\n        return (\n            <div>\n                <h5>Welcome: <span>{this.props.user}</span></h5>\n                <form onSubmit={e => this.props.msg === '' ?\n                    e.preventDefault() :\n                    submitMessage(e, { msg: this.props.msg, user: this.props.user, stamp: today })}>\n                    <input id='message' className='form-control' type='text'\n                        onChange={this.props.updateMsg} value={this.props.msg} \n                        placeholder='Chat with other players' />\n                    <button id='submit' className='btn btn-default' type='submit'\n                        onClick={this.props.submitMsg}>Send</button>\n                </form>\n                <div id='messages'>{this.props.msgs.map(m =>\n                    <p className='msg'>\n                        <code className={m.user === this.props.user ? 'myMsg' : ''}>{m.user}:</code>\n                        {` ${m.msg}`}<caption>{m.stamp}</caption></p>)}\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { broadcastUser, broadcastUsers, broadcastMessages, joinGame, startGame, stopGame, broadcastScores, soloGame } from './api';\nimport Messenger from './components/Messenger';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userID: 'none',\n      users: [],\n      msg: '',\n      msgs: [],\n      isStart: false,\n      scores: []\n    }\n    broadcastUser((user) => this.setState({\n      userID: user\n    }));\n    broadcastUsers((users) => this.setState({\n      users: users\n    }));\n    broadcastMessages(msgs => this.setState({\n      msgs: msgs\n    }))\n    startGame(isStart => this.setState({\n      isStart: isStart\n    }))\n    stopGame(isStart => this.setState({\n      isStart: isStart\n    }))\n    broadcastScores(scores => this.setState({\n      scores: JSON.parse(scores)\n    }))\n  }\n  updateMsg = e => {\n    this.setState({\n      msg: e.target.value\n    })\n  }\n  submitMsg = () => {\n    setTimeout(() => this.setState({\n      msg: ''\n    }), 50);\n  }\n  render() {\n    const { userID, users, scores } = this.state;\n    var online = users.filter(u => u !== userID);\n    return (\n      <div className=\"App\">\n      {!this.state.isStart ?\n      <div id='btn' className='row'><div className='col-sm'><button className='btn btn-warning btn-block' onClick={_ => joinGame()}>Join Game</button></div>\n      <div className='col-sm'><button className='btn btn-default btn-block' onClick={soloGame}>Solo Game</button></div></div> :\n      <div id='in-progress' className='text-center'><code>Game in Progress</code></div>}\n      <div id='headers'>\n      <div className='row'>\n        <div className=\"online col-sm\">\n          <h5>ONLINE <div className='icon'>{this.state.users.length - 1}</div></h5>\n          {online.map( u => <div key={u} className='players'>{u}</div>)}\n        </div>\n        <div className=\"online col-sm\">\n          <h5>High Score: </h5>\n          <ol>\n            {scores.map(s => <li key={'scores' + s.user_id}>{s.name + ': ' + s.score}</li>)}\n          </ol>\n        </div>\n        </div>\n</div>\n        <Messenger msg={this.state.msg}\n        msgs={this.state.msgs}\n        updateMsg={this.updateMsg}\n        submitMsg={this.submitMsg}\n        user={this.state.userID} />\n\n        <div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}