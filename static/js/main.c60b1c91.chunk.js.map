{"version":3,"sources":["components/employeeTable.js","components/viewDeleteEmployee.js","components/addEditEmployee.js","App.js","serviceWorker.js","index.js"],"names":["EmployeeQuery","gql","_templateObject","EmployeeTable","count","_this$props","this","props","_this$props$data","data","loading","employees","viewEmployee","createEmployee","react_default","a","createElement","className","Button_default","variant","color","aria-label","size","onClick","Add_default","Paper_default","elevation","scope","map","employee","key","id","first","last","email","phone","salary","concat","Component","graphql","viewDeleteEmployee_templateObject","RemoveMutation","_templateObject2","ViewDeleteEmployee","_removeEmployee","_callee","e","regenerator_default","wrap","_context","prev","next","_this","removeEmployee","variables","update","store","readQuery","query","filter","x","writeQuery","window","location","reload","stop","_this2","viewTable","editEmployee","EditOutlined_default","DeleteOutlined_default","data-toggle","data-target","tabIndex","role","aria-labelledby","aria-hidden","type","data-dismiss","Delete_default","name","addEditEmployee_templateObject","CreateMutation","addEditEmployee_templateObject2","UpdateMutation","_templateObject3","AddEditEmployee","parseInt","_ref2","push","updateEmployee","_callee2","_context2","updateFirst","updateLast","updateEmail","updatePhone","updateSalary","isCreate","onChange","value","placeholder","required","compose","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_editEmployee","setState","isEdit","isView","_viewEmployee","_viewTable","_createEmployee","_selectEmployee","_updateFirst","target","_updateLast","_updateEmail","_updatePhone","_updateSalary","_updateState","state","viewDeleteEmployee","updateState","addEditEmployee","employeeTable","Boolean","hostname","match","client","ApolloClient","uri","ReactDOM","render","react_apollo_browser_umd","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c60b1c91.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport gql from \"graphql-tag\";\nimport { graphql } from \"react-apollo\";\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\n\nconst EmployeeQuery = gql`\n{\n  employees {\n    id\n    first\n    last\n    email\n    phone\n    salary\n  }\n}\n`;\n\nclass EmployeeTable extends Component {\n    render() {\n        let count = 1;\n        const { data: { loading, employees }, viewEmployee, createEmployee } = this.props;\n        if (loading) {\n            return null;\n        }\n\n        return (\n            <div className='component'>\n                <h2 className='title'>Employees</h2>\n                <Button variant=\"contained\" color=\"default\" aria-label=\"Add\" size='small' onClick={createEmployee}>\n                    <AddIcon />\n                </Button>                <Paper elevation={2}>\n                    <table className=\"table\">\n                        <thead className='bg-primary'>\n                            <tr>\n                                <th scope=\"col\">#</th>\n                                <th scope=\"col\">Name</th>\n                                <th scope=\"col\">Email</th>\n                                <th scope=\"col\">Phone</th>\n                                <th scope=\"col\">Salary</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {employees.map(employee => (\n                                <tr key={employee.id} className=\"item\" onClick={() => viewEmployee(employee.id, employee.first, employee.last, employee.email, employee.phone, employee.salary)}>\n                                    <th scope=\"row\">{count++}</th>\n                                    <td>{employee.first} {employee.last}</td>\n                                    <td>{employee.email}</td>\n                                    <td>{`(${employee.phone[0]}${employee.phone[1]}${employee.phone[2]}) ${employee.phone[3]}${employee.phone[4]}${employee.phone[5]}-${employee.phone[6]}${employee.phone[7]}${employee.phone[8]}${employee.phone[9]}`}</td>\n                                    <td>{'$' + employee.salary}</td>\n                                </tr>))}\n                        </tbody>\n                    </table>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nexport default graphql(EmployeeQuery)(EmployeeTable);","import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport gql from \"graphql-tag\";\nimport { graphql } from \"react-apollo\";\n\nconst EmployeeQuery = gql`\n{\n  employees {\n    id\n    first\n    last\n    email\n    phone\n    salary\n  }\n}\n`;\n\nconst RemoveMutation = gql`\nmutation($id: ID!) {\n    removeEmployee(id: $id)\n  }\n`;\n\n\nclass ViewDeleteEmployee extends Component {\n\n    _removeEmployee = async e => {\n        await this.props.removeEmployee({\n            variables: {\n                id: this.props.id\n            },\n            update: store => {\n                const data = store.readQuery({ query: EmployeeQuery });\n                data.employees = data.employees.filter(x => x.id === this.props.id);\n                store.writeQuery({ query: EmployeeQuery, data });\n            }\n        });\n        window.location.reload(false);\n    }\n\n    render() {\n        const { id, first, last, email, phone, salary, viewTable, editEmployee } = this.props;\n        return (\n            <div className='component'>\n                <h2 className='title'>Employee Record</h2>\n\n                <Button variant=\"contained\" color=\"default\" aria-label=\"Add\" size='small' onClick={editEmployee}>\n                    <EditOutlinedIcon />\n                </Button>\n                <Button variant=\"contained\" color=\"default\" aria-label=\"Add\" size='small'>\n                    <DeleteOutlinedIcon data-toggle=\"modal\" data-target=\"#deletePermanent\" />\n                </Button>\n                <Paper elevation={2} className='record'>\n                    <div className='data'>\n                        <b>Employee ID</b>\n                        <div>{id}</div>\n                    </div>\n                    <div className='data'>\n                        <b>Full Name</b>\n                        <div>{first} {last}</div>\n                    </div>\n                    <div className='data'>\n                        <b>Email</b>\n                        <div>{email}</div>\n                    </div>\n                    <div className='data'>\n                        <b>Phone</b>\n                        <div>{`(${phone[0]}${phone[1]}${phone[2]}) ${phone[3]}${phone[4]}${phone[5]}-${phone[6]}${phone[7]}${phone[8]}${phone[9]}`}</div>\n                    </div>\n                    <div className='data'>\n                        <b>Salary</b>\n                        <div>{'$' + salary}</div>\n                    </div>\n                </Paper>\n                <button className='btn btn-primary' onClick={viewTable}>Back</button>\n\n                <div className=\"modal fade\" id=\"deletePermanent\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"ModalLabel\"><b>Warning!</b></h5>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body bg-danger\">\n                                Are you sure you want to delete this employee record permanently?\n      </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={e => this._removeEmployee(e)}><DeleteIcon /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default graphql(RemoveMutation, { name: 'removeEmployee' })(ViewDeleteEmployee);\n","import React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport gql from \"graphql-tag\";\nimport { graphql, compose } from \"react-apollo\";\n\nconst EmployeeQuery = gql`\n{\n  employees {\n    id\n    first\n    last\n    email\n    phone\n    salary\n  }\n}\n`;\n\nconst CreateMutation = gql`\nmutation($first: String!, $last: String!, $email: String!, $phone: String!, $salary: Int!) {\n    createEmployee(first: $first, last: $last, email: $email, phone: $phone, salary: $salary) {\n      id\n      first\n      last\n      email\n      phone\n      salary\n    }\n  }\n`;\n\nconst UpdateMutation = gql`\nmutation($id: ID!, $first: String!, $last: String!, $email: String!, $phone: String!, $salary: Int!) {\n    updateEmployee(id: $id, first: $first, last: $last, email: $email, phone: $phone, salary: $salary)\n  }\n`;\n\nclass AddEditEmployee extends Component {\n\n    createEmployee = async () => {\n        await this.props.createEmployee({\n            variables: {\n                first: this.props.first,\n                last: this.props.last,\n                email: this.props.email,\n                phone: this.props.phone,\n                salary: parseInt(this.props.salary)\n            },\n            update: (store, { data: { createEmployee } }) => {\n                const data = store.readQuery({ query: EmployeeQuery });\n                data.employees = data.employees.push(createEmployee)\n                store.writeQuery({ query: EmployeeQuery, data });\n            }\n        });\n        this.props.viewTable();\n    }\n    updateEmployee = async e => {\n        await this.props.updateEmployee({\n            variables: {\n                id: this.props.id,\n                first: this.props.first,\n                last: this.props.last,\n                email: this.props.email,\n                phone: this.props.phone,\n                salary: parseInt(this.props.salary)\n            },\n            update: store => {\n                const data = store.readQuery({ query: EmployeeQuery });\n                data.employees = data.employees.map(x =>\n                    x.id === this.props.id ?\n                        {\n                            id: this.props.id,\n                            first: this.props.first,\n                            last: this.props.last,\n                            email: this.props.email,\n                            phone: this.props.phone,\n                            salary: this.props.salary\n                        } : x);\n                store.writeQuery({ query: EmployeeQuery, data });\n            }\n        });\n        this.props.viewTable();\n    }\n\n    render() {\n        const { id, first, last, email, phone, salary, viewEmployee, viewTable, updateFirst, updateLast, updateEmail, updatePhone, updateSalary, isCreate } = this.props;\n        return (\n            <div className='component'>\n                <h2 className='title'>\n                    {isCreate ?\n                        'Create Employee Record' :\n                        'Edit Employee Record'}\n                </h2>\n                <form>\n                    <Paper elevation={2} className='record'>\n\n                        {isCreate ? '' : <div className='data'>\n                            <b>Employee ID</b>\n                            <div>{id}</div>\n                        </div>}\n                        <div className='data'>\n                            <b>First</b>\n                            <input type='text' className='form-control' onChange={updateFirst} value={first} placeholder='Jane' required />\n                        </div>\n                        <div className='data'>\n                            <b>Last</b>\n                            <input type='text' className='form-control' onChange={updateLast} value={last} placeholder='Doe' required />\n                        </div>\n                        <div className='data'>\n                            <b>Email</b>\n                            <input type='email' className='form-control' onChange={updateEmail} value={email} placeholder='example@mail.com' required />\n                        </div>\n                        <div className='data'>\n                            <b>Phone</b>\n                            <input type='number' className='form-control' onChange={updatePhone} value={phone} placeholder='Enter 10 digits' required />\n                        </div>\n                        <div className='data'>\n                            <b>Salary</b>\n                            <input type='number' className='form-control' onChange={updateSalary} value={salary} placeholder='Numbers only, e.g. 87000' required />\n                        </div>\n                    </Paper>\n                    <button id='backBtn' className='btn btn-primary' onClick={isCreate ? viewTable : viewEmployee}>Back</button>\n                    <button className='btn btn-primary'\n                        onClick={isCreate ?\n                            (this.createEmployee) :\n                            (e => this.updateEmployee(e))}>\n                        {isCreate ? 'Create' : 'Save'}\n                    </button></form>\n            </div>\n        );\n    }\n}\n\nexport default compose(\n    graphql(CreateMutation, { name: 'createEmployee' }),\n    graphql(UpdateMutation, { name: 'updateEmployee' })\n)(AddEditEmployee);\n","import React, { Component } from 'react';\nimport EmployeeTable from './components/employeeTable';\nimport ViewDeleteEmployee from './components/viewDeleteEmployee';\nimport AddEditEmployee from './components/addEditEmployee';\n\n\n\nclass App extends Component {\nconstructor (props) {\n  super(props)\n\n  this.state = {\n    isView: false,\n    isEdit: false,\n    isCreate: false,\n    id: '',\n    first: '',\n    last: '',\n    email: '',\n    phone: '',\n    salary: ''\n  }\n}\n\n_editEmployee = () => {\n  this.setState({ isEdit: true, isView: false });\n}\n\n_viewEmployee = () => {\n  this.setState({ isView: true, isEdit: false });\n}\n\n_viewTable = () => {\n  this.setState({ isEdit: false, isView: false, isCreate: false})\n}\n\n_createEmployee = () => {\n  this.setState({ isCreate: true, isEdit: true, id: '', first: '', last: '', email: '', phone: '', salary: '' })\n}\n\n_selectEmployee = (id, first, last, email, phone, salary) => {\n  this.setState({ id, first: first, last: last, email: email, phone: phone, salary: salary });\n  this._viewEmployee();\n}\n\n_updateFirst = e => {\n  this.setState({ first: e.target.value })\n}\n\n_updateLast = e => {\n  this.setState({ last: e.target.value })\n}\n\n_updateEmail = e => {\n  this.setState({ email: e.target.value })\n}\n\n_updatePhone = e => {\n  this.setState({ phone: e.target.value })\n}\n\n_updateSalary = e => {\n  this.setState({ salary: e.target.value })\n}\n\n_updateState = () => {\n  this.setState({ state: this.state })\n}\n\n  render() {\n\n    return (\n      <div>\n        {this.state.isView?\n        <ViewDeleteEmployee\n        updateState={this._updateState}\n        editEmployee={this._editEmployee}\n        viewTable={this._viewTable}\n        id={this.state.id}\n        first={this.state.first}\n        last={this.state.last}\n        email={this.state.email}\n        phone={this.state.phone}\n        salary={this.state.salary} />:\n        this.state.isEdit?\n        <AddEditEmployee\n        isCreate={this.state.isCreate}\n        viewTable={this._viewTable}\n        updateFirst={this._updateFirst}\n        updateLast={this._updateLast}\n        updateEmail={this._updateEmail}\n        updatePhone={this._updatePhone}\n        updateSalary={this._updateSalary}\n        viewEmployee={this._viewEmployee}\n        id={this.state.id}\n        first={this.state.first}\n        last={this.state.last}\n        email={this.state.email}\n        phone={this.state.phone}\n        salary={this.state.salary}\n        />:\n        <EmployeeTable\n        viewEmployee={this._selectEmployee}\n        createEmployee={this._createEmployee}\n        />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\nconst client = new ApolloClient({\n  uri: \"https://thawing-springs-45393.herokuapp.com\"\n});\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n    <App />\n    </ApolloProvider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}